{"version":3,"sources":["services/notes.jsx","App.jsx","index.jsx"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","Note","note","toggleImportance","label","important","className","content","onClick","notesToShow","filter","Notification","message","Footer","style","color","fontStyle","fontSize","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wOAEMA,EAAU,iDAkBD,EAhBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAc,OAAOA,EAASC,SAcrC,EAXA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,eCuH5BK,MAnIf,SAAaC,GAAQ,IAAD,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAGYF,mBAAS,IAHrB,mBAGXG,EAHW,KAGFC,EAHE,OAIYJ,oBAAS,GAJrB,mBAIXK,EAJW,KAIFC,EAJE,OAKsBN,mBAAS,0BAL/B,mBAKXO,EALW,KAKGC,EALH,KAOlBC,qBAAU,WACRC,IAAqBnB,MAAK,SAAAoB,GACxBT,EAASS,QAEV,IAEH,IA0CMC,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QAKpCK,EAAcf,EAAUJ,EAAQA,EAAMoB,QAAO,SAAAR,GAAI,OAAuB,IAAnBA,EAAKG,aAG1DM,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKN,UAAU,QAAf,SACGM,KAODC,EAAS,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GAMN,OAEE,gCACE,uCACA,cAACN,EAAD,CAAcC,QAAShB,IACvB,8BACE,yBAAQY,QAAS,kBAAMb,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACCe,EAAYS,KAAI,SAAAhB,GAAI,OACjB,cAACD,EAAD,CAEEC,KAAMA,EACNC,iBAAkB,kBAhFD,SAAAlB,GACzB,IAAMiB,EAAOZ,EAAM6B,MAAK,SAAAC,GAAC,OAAIA,EAAEnC,KAAOA,KAChCoC,EAAW,2BAAQnB,GAAR,IAAcG,WAAYH,EAAKG,YAEhDN,EAAmBd,EAAIoC,GAAazC,MAAK,SAAA0C,GACvC/B,EAASD,EAAM4B,KAAI,SAAAhB,GAAI,OAAIA,EAAKjB,KAAOA,EAAKiB,EAAOoB,SAEpDC,OAAM,SAAAC,GACL3B,EAAgB,SAAD,OACJK,EAAKK,QADD,sCAGfkB,YAAW,WACT5B,EAAgB,QACf,KACHN,EAASD,EAAMoB,QAAO,SAAAU,GAAC,OAAIA,EAAEnC,KAAOA,SAkENyC,CAAmBxB,EAAKjB,MAF3CiB,EAAKjB,SAMhB,uBAAM0C,SA1GM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjBvB,QAASf,EACTuC,MAAM,IAAIC,MAAOC,cACjB5B,UAAW6B,KAAKC,SAAW,GAC3BlD,GAAIK,EAAM8C,OAAS,GAGrBrC,EAAmB+B,GAAYlD,MAAK,SAAA0C,GAClC/B,EAASD,EAAM+C,OAAOf,IACtB7B,EAAW,QA8FX,UACE,uBACE6C,MAAO9C,EACP+C,SA7FiB,SAACX,GAExBnC,EAAWmC,EAAMY,OAAOF,UA6FpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC5B,EAAD,QC5HN6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fcf9ea9a.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/notes'\r\nconst baseUrl = 'http://rocky-sea-60210.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => { return response.data })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport './App.css';\n\nfunction App(props) {\n  \n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(''); \n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes)\n    });\n  }, [])\n \n  const addNote = (event) => {\n    event.preventDefault()\n    \n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n  \n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  }\n  \n  const handleNoteChange = (event) => {\n    //console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  // ********************************************************************************\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n // ********************************************************************************\n\n  // Definicion del Componente Note\n  const Note = ({ note, toggleImportance }) => {\n    const label = note.important\n      ? 'make not important' : 'make important'\n  \n    return (\n      <li className='note'>\n        {note.content} \n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n// ********************************************************************************\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n// ********************************************************************************\n\n // ********************************************************************************\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n      </div>\n    )\n  }\n // ********************************************************************************\n\n  return (\n    \n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>  \n      <ul>\n      {notesToShow.map(note => \n          <Note\n            key={note.id}\n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}